// Frontend JS (moderated posts)
const state = { config:null, events:[], attendance:[], trainings:[], experiences:[] };
function $(id){ return document.getElementById(id); }
function qsa(sel, root=document){ return Array.from(root.querySelectorAll(sel)); }
qsa('[data-tab]').forEach(btn=>{ btn.addEventListener('click', ()=>{ const tab = btn.dataset.tab; qsa('main > section').forEach(sec=> sec.classList.add('hidden')); qsa('[data-tab]').forEach(b=> b.classList.remove('tab-active')); $(tab).classList.remove('hidden'); btn.classList.add('tab-active'); }); });
async function loadConfig(){ const res = await fetch('config.json').catch(()=>null); if(res && res.ok) return res.json(); const res2 = await fetch('config.sample.json'); return res2.json(); }
function renderCalendar(){ const div = $('calendar-embed'); if(state.config.calendarEmbed){ div.innerHTML = `<iframe src="${state.config.calendarEmbed}" class="w-full h-full" frameborder="0" scrolling="no"></iframe>`; } else { div.innerHTML = `<div class="w-full h-full flex items-center justify-center text-slate-500 text-sm">（可選）在 config.json 設定 calendarEmbed 以嵌入日曆</div>`; } }
function parseStart(s){ if(!s) return null; let str = String(s).trim(); if(/^\d{4}[/-]\d{1,2}[/-]\d{1,2}$/.test(str)) str += ' 00:00'; str = str.replace(/\//g,'-').replace(' ','T'); return new Date(str); }
function fmt(d){ const pad=n=>String(n).padStart(2,'0'); return `${d.getFullYear()}/${pad(d.getMonth()+1)}/${pad(d.getDate())} ${pad(d.getHours())}:${pad(d.getMinutes())}`; }
function eventCheckinUrl(eventId){ const { origin, pathname } = window.location; return `${origin}${pathname}?event=${encodeURIComponent(eventId)}`; }
function renderEvents(){ const list = $('event-list'); list.innerHTML = ''; if(!state.events.length){ $('no-events').classList.remove('hidden'); return; } $('no-events').classList.add('hidden'); state.events.slice().sort((a,b)=> parseStart(a.start)-parseStart(b.start)).forEach(ev=>{ const count = state.attendance.filter(x=>x.event_id===ev.id && (x.status||'').toLowerCase()!=='rejected').length; const card = document.createElement('div'); card.className = 'card'; const dateStr = fmt(parseStart(ev.start)); card.innerHTML = `<div class="flex items-start justify-between gap-3"><div><div class="text-sm text-slate-500">${dateStr}</div><h3 class="text-lg font-semibold">${ev.title}</h3><p class="text-sm text-slate-600 mt-1">${ev.desc||''}</p>${ev.location?`<div class="text-sm mt-1">📍 ${ev.location}</div>`:''}${ev.album?`<a class="text-blue-600 text-sm hover:underline" href="${ev.album}" target="_blank" rel="noopener">📷 相簿</a>`:''}</div><div class="text-right"><div class="chip">已登記：${count} 人</div><div class="flex gap-2 justify-end mt-2"><button class="btn" data-qr="${ev.id}" data-title="${ev.title}">簽到 QR Code</button><button class="btn btn-primary" data-join="${ev.id}" data-title="${ev.title}">我要報名</button></div></div></div>`; list.appendChild(card); }); list.querySelectorAll('[data-join]').forEach(b=> b.addEventListener('click', ()=> openJoin(b.dataset.join, b.dataset.title))); list.querySelectorAll('[data-qr]').forEach(b=> b.addEventListener('click', ()=> openQR(b.dataset.qr, b.dataset.title))); }
function renderStats(){ const now = new Date(); const ym = `${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,'0')}`; const monthly = state.attendance.filter(a => (a.timestamp||'').startsWith(ym) && (a.status||'')!=='rejected'); const byName = {}; monthly.forEach(a => { const key = `${a.name}（${a.division||'未填分隊'}）`; byName[key] = (byName[key]||0)+1; }); const top = Object.entries(byName).sort((a,b)=> b[1]-a[1]).slice(0,10); $('top-attendees').innerHTML = top.map(([n,c])=> `<li>${n} – ${c} 次</li>`).join('') || '<li>本月尚無出勤資料</li>'; const per = {}; state.attendance.forEach(a=>{ if((a.status||'')==='rejected') return; per[a.event_id] = (per[a.event_id]||0)+1; }); const rows = state.events.map(e=>({ title:e.title, date:fmt(parseStart(e.start)), count: per[e.id]||0 })).sort((a,b)=> parseStart(a.date)-parseStart(b.date)); $('per-event-counts').innerHTML = rows.map(r=> `<li>${r.date}｜${r.title}：${r.count} 人</li>`).join('') || '<li>尚無資料</li>'; }
function renderGallery(){ const wrap = $('album-list'); wrap.innerHTML=''; const albums = state.events.filter(e=> !!e.album); if(!albums.length){ wrap.innerHTML = '<div class="text-sm text-slate-500">尚未設定相簿連結。</div>'; return; } albums.forEach(e=>{ const a = document.createElement('a'); a.href = e.album; a.target="_blank"; a.rel="noopener"; a.className = 'block rounded-xl overflow-hidden bg-white shadow hover:shadow-lg transition'; a.innerHTML = `<div class="aspect-video bg-gray-100 flex items-center justify-center text-slate-400">相簿</div><div class="p-3 text-sm"><div class="font-medium">${e.title}</div><div class="text-slate-500">${parseStart(e.start).toLocaleDateString()}</div></div>`; wrap.appendChild(a); }); }
function openJoin(id, title){ $('join-event-title').textContent = title; $('jf-event-id').value = id; $('jf-name').value = ''; const sel = $('jf-division'); sel.innerHTML = ''; (state.config.divisions||['未填']).forEach(d=>{ const opt = document.createElement('option'); opt.value=d; opt.textContent=d; sel.appendChild(opt); }); $('jf-confirm').checked=false; $('jf-result').textContent=''; $('join-modal').classList.remove('hidden'); $('join-modal').classList.add('flex'); }
function closeJoin(){ $('join-modal').classList.add('hidden'); $('join-modal').classList.remove('flex'); }
$('jf-cancel').addEventListener('click', closeJoin);
$('join-form').addEventListener('submit', async (e)=>{ e.preventDefault(); const name = $('jf-name').value.trim(); if(!name || !$('jf-confirm').checked) return; const payload = { action:'join', event_id:$('jf-event-id').value, name, division: $('jf-division').value }; $('jf-result').textContent = '送出中...'; try{ const res = await fetch(state.config.apiBase, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) }); const data = await res.json(); if(data.status==='ok'){ $('jf-result').textContent='登記成功！'; await bootstrap(); closeJoin(); } else { $('jf-result').textContent='失敗：'+(data.message||'請稍後再試'); } }catch(err){ $('jf-result').textContent='連線失敗'; } });
function openQR(eventId, title){ const modal = document.createElement('div'); modal.className = 'fixed inset-0 bg-black/40 flex items-center justify-center p-4'; modal.innerHTML = `<div class="bg-white rounded-2xl shadow-xl max-w-md w-full p-6"><h3 class="text-lg font-semibold mb-2">簽到 QR Code</h3><p class="text-sm text-slate-600 mb-3">${title}（${eventId}）</p><div id="qrbox" class="flex items-center justify-center p-4"></div><div class="text-xs text-slate-500">掃描後會直接開啟該活動報名視窗。</div><div class="flex justify-end pt-3"><button class="btn" id="qr-close">關閉</button></div></div>`; document.body.appendChild(modal); new QRCode(modal.querySelector('#qrbox'), { text: eventCheckinUrl(eventId), width: 220, height: 220 }); modal.querySelector('#qr-close').addEventListener('click', ()=> modal.remove()); }
function handleScanParam(){ const p = new URLSearchParams(location.search); const eid = p.get('event'); if(eid){ const ev = state.events.find(e=>e.id===eid); openJoin(eid, ev ? ev.title : `活動 ${eid}`); } }
function renderPosts(){ const tWrap = $('training-list'); const eWrap = $('exp-list'); tWrap.innerHTML = ''; eWrap.innerHTML=''; const t = (state.trainings||[]).filter(p=> (p.status||'confirmed')==='confirmed'); const e = (state.experiences||[]).filter(p=> (p.status||'confirmed')==='confirmed'); if(t.length){ $('training-empty').classList.add('hidden'); t.slice().reverse().forEach(p=> tWrap.appendChild(postCard(p))); }else{ $('training-empty').classList.remove('hidden'); } if(e.length){ $('exp-empty').classList.add('hidden'); e.slice().reverse().forEach(p=> eWrap.appendChild(postCard(p))); }else{ $('exp-empty').classList.remove('hidden'); } }
function postCard(p){ const div = document.createElement('div'); div.className='card'; div.innerHTML = `<div class="flex gap-3">${p.image_url? `<img src="${p.image_url}" class="w-32 h-24 object-cover rounded-lg" loading="lazy">` : ''}<div><div class="text-sm text-slate-500">${(p.created_at||'').replace('T',' ')}</div><h3 class="font-semibold">${p.title}</h3><p class="text-sm text-slate-700 whitespace-pre-wrap mt-1">${p.content||''}</p>${p.author? `<div class="text-xs text-slate-500 mt-1">分享者：${p.author}</div>`:''}</div></div>`; return div; }
let postKind = 'training';
$('btn-add-training').addEventListener('click', ()=> openPost('training'));
$('btn-add-exp').addEventListener('click', ()=> openPost('experience'));
function openPost(kind){ postKind = kind; $('post-title').textContent = kind==='training' ? '分享教育訓練心得' : '新增協勤經歷分享'; $('pf-title').value=''; $('pf-content').value=''; $('pf-image').value=''; $('pf-result').textContent=''; $('post-modal').classList.remove('hidden'); $('post-modal').classList.add('flex'); }
$('pf-cancel').addEventListener('click', ()=>{ $('post-modal').classList.add('hidden'); $('post-modal').classList.remove('flex'); });
$('post-form').addEventListener('submit', async (e)=>{ e.preventDefault(); const payload = { action: postKind==='training' ? 'post_training' : 'post_experience', title: $('pf-title').value.trim(), content: $('pf-content').value.trim(), image_url: $('pf-image').value.trim() }; if(!payload.title || !payload.content) return; $('pf-result').textContent='送出中...'; try{ const res = await fetch(state.config.apiBase, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) }); const data = await res.json(); if(data.status==='ok'){ $('pf-result').textContent='已送出（待審核）！'; await bootstrap(); $('post-modal').classList.add('hidden'); $('post-modal').classList.remove('flex'); }else{ $('pf-result').textContent='失敗：'+(data.message||'請稍後再試'); } }catch(err){ $('pf-result').textContent='連線失敗'; } });
$('btn-load-pending').addEventListener('click', async ()=>{ const pin = $('admin-pin').value.trim() || state.config.adminPin || ''; const res = await fetch(`${state.config.apiBase}?action=bootstrap`); const data = await res.json(); const pendingAtt = (data.attendance||[]).filter(a=> (a.status||'pending')==='pending'); const pendingPosts = [...(data.trainings||[]).map(p=>({...p, _kind:'training'})), ...(data.experiences||[]).map(p=>({...p, _kind:'experience'}))].filter(p=> (p.status||'pending')==='pending'); const list = $('pending-list'); list.innerHTML=''; if(!pendingAtt.length){ list.innerHTML='<div class="text-sm text-slate-500">沒有出席待確認</div>'; } pendingAtt.forEach(a=>{ const row = document.createElement('div'); row.className='card'; row.innerHTML = `<div class="flex items-center justify-between"><div class="text-sm">${a.timestamp.replace('T',' ')}｜${a.name}（${a.division||'未填'}）→ 活動：${a.event_id}</div><div class="flex gap-2"><button class="btn" data-type="att" data-act="ok" data-id="${a.id}" data-pin="${pin}">確認</button><button class="btn" data-type="att" data-act="rej" data-id="${a.id}" data-pin="${pin}">退回</button></div></div>`; list.appendChild(row); }); const posts = $('pending-posts'); posts.innerHTML=''; if(!pendingPosts.length){ posts.innerHTML='<div class="text-sm text-slate-500">沒有文章待審核</div>'; } pendingPosts.forEach(p=>{ const row = document.createElement('div'); row.className='card'; row.innerHTML = `<div class="flex items-center justify-between gap-3"><div class="text-sm"><div>${p._kind==='training'?'[教育訓練]':'[協勤經歷]'} ${p.title}</div><div class="text-slate-500 truncate">${p.content||''}</div></div><div class="flex gap-2"><button class="btn" data-type="post" data-kind="${p._kind}" data-act="ok" data-id="${p.id}" data-pin="${pin}">核准</button><button class="btn" data-type="post" data-kind="${p._kind}" data-act="rej" data-id="${p.id}" data-pin="${pin}">退回</button></div></div>`; posts.appendChild(row); }); qsa('button[data-type="att"]').forEach(b=> b.addEventListener('click', async ()=>{ const status = b.dataset.act==='ok' ? 'confirmed' : 'rejected'; const payload = { action:'confirm_attendance', id:b.dataset.id, status, token:b.dataset.pin }; const res2 = await fetch(state.config.apiBase, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) }); const out = await res2.json(); if(out.status==='ok'){ await bootstrap(); b.closest('.card').remove(); } else alert(out.message||'操作失敗'); })); qsa('button[data-type="post"]').forEach(b=> b.addEventListener('click', async ()=>{ const status = b.dataset.act==='ok' ? 'confirmed' : 'rejected'; const payload = { action:'confirm_post', kind:b.dataset.kind, id:b.dataset.id, status, token:b.dataset.pin }; const res2 = await fetch(state.config.apiBase, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(payload) }); const out = await res2.json(); if(out.status==='ok'){ await bootstrap(); b.closest('.card').remove(); } else alert(out.message||'操作失敗'); })); });
async function bootstrap(){ const res = await fetch(`${state.config.apiBase}?action=bootstrap`); const data = await res.json(); state.events = data.events || []; state.attendance = data.attendance || []; state.trainings = data.trainings || []; state.experiences = data.experiences || []; renderCalendar(); renderEvents(); renderStats(); renderGallery(); renderPosts(); handleScanParam(); }
(async function(){ $('year').textContent = new Date().getFullYear(); state.config = await loadConfig(); await bootstrap(); })();
